2022-05-18 00:03:02,284 INFO com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver [AsyncResolver-bootstrap-executor-0] Resolving eureka endpoints via configuration
2022-05-18 00:08:02,293 INFO com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver [AsyncResolver-bootstrap-executor-0] Resolving eureka endpoints via configuration
2022-05-18 00:13:02,308 INFO com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver [AsyncResolver-bootstrap-executor-0] Resolving eureka endpoints via configuration
2022-05-18 00:18:02,317 INFO com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver [AsyncResolver-bootstrap-executor-0] Resolving eureka endpoints via configuration
2022-05-18 00:23:02,327 INFO com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver [AsyncResolver-bootstrap-executor-0] Resolving eureka endpoints via configuration
2022-05-18 00:28:02,343 INFO com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver [AsyncResolver-bootstrap-executor-0] Resolving eureka endpoints via configuration
2022-05-18 00:28:43,568 INFO org.springframework.cloud.netflix.eureka.serviceregistry.EurekaServiceRegistry [SpringContextShutdownHook] Unregistering application SHOPPING-CART-COMMAND-SERVICE with eureka with status DOWN
2022-05-18 00:28:43,570 WARN com.netflix.discovery.DiscoveryClient$3 [SpringContextShutdownHook] Saw local status change event StatusChangeEvent [timestamp=1652851723570, current=DOWN, previous=UP]
2022-05-18 00:28:43,571 INFO com.netflix.discovery.DiscoveryClient [DiscoveryClient-InstanceInfoReplicator-0] DiscoveryClient_SHOPPING-CART-COMMAND-SERVICE/DESKTOP-4JQFJ2O.mshome.net:shopping-cart-command-service:8009: registering service...
2022-05-18 00:28:43,590 INFO com.netflix.discovery.DiscoveryClient [DiscoveryClient-InstanceInfoReplicator-0] DiscoveryClient_SHOPPING-CART-COMMAND-SERVICE/DESKTOP-4JQFJ2O.mshome.net:shopping-cart-command-service:8009 - registration status: 204
2022-05-18 00:28:43,892 INFO org.springframework.scheduling.concurrent.ExecutorConfigurationSupport [SpringContextShutdownHook] Shutting down ExecutorService 'applicationTaskExecutor'
2022-05-18 00:28:44,031 INFO com.netflix.discovery.DiscoveryClient [SpringContextShutdownHook] Shutting down DiscoveryClient ...
2022-05-18 00:28:47,034 INFO com.netflix.discovery.DiscoveryClient [SpringContextShutdownHook] Unregistering ...
2022-05-18 00:28:47,051 INFO com.netflix.discovery.DiscoveryClient [SpringContextShutdownHook] DiscoveryClient_SHOPPING-CART-COMMAND-SERVICE/DESKTOP-4JQFJ2O.mshome.net:shopping-cart-command-service:8009 - deregister  status: 200
2022-05-18 00:28:47,062 INFO com.netflix.discovery.DiscoveryClient [SpringContextShutdownHook] Completed shut down of DiscoveryClient
2022-05-18 00:29:41,644 INFO org.hibernate.validator.internal.util.Version [background-preinit] HV000001: Hibernate Validator 6.1.7.Final
2022-05-18 00:29:42,735 INFO org.springframework.cloud.config.client.ConfigServicePropertySourceLocator [main] Fetching config from server at : http://localhost:8003
2022-05-18 00:29:43,589 INFO org.springframework.cloud.config.client.ConfigServicePropertySourceLocator [main] Located environment: name=shopping-cart-command-service, profiles=[default], label=null, version=6beebd0254f32a276770508abbeae0daef39cce7, state=null
2022-05-18 00:29:43,590 INFO org.springframework.cloud.bootstrap.config.PropertySourceBootstrapConfiguration [main] Located property source: [BootstrapPropertySource {name='bootstrapProperties-configClient'}, BootstrapPropertySource {name='bootstrapProperties-https://github.com/abenitrust/swa_config/shopping-cart-command-service.yml'}]
2022-05-18 00:29:43,622 INFO org.springframework.boot.SpringApplication [main] No active profile set, falling back to default profiles: default
2022-05-18 00:29:44,289 INFO org.springframework.data.repository.config.RepositoryConfigurationDelegate [main] Bootstrapping Spring Data MongoDB repositories in DEFAULT mode.
2022-05-18 00:29:44,361 INFO org.springframework.data.repository.config.RepositoryConfigurationDelegate [main] Finished Spring Data repository scanning in 68ms. Found 1 MongoDB repository interfaces.
2022-05-18 00:29:44,690 INFO org.springframework.cloud.context.scope.GenericScope [main] BeanFactory id=5895182d-12eb-3dcb-a600-d1a95f2ffd58
2022-05-18 00:29:45,242 INFO org.springframework.boot.web.embedded.tomcat.TomcatWebServer [main] Tomcat initialized with port(s): 8009 (http)
2022-05-18 00:29:45,251 INFO org.apache.juli.logging.DirectJDKLog [main] Initializing ProtocolHandler ["http-nio-8009"]
2022-05-18 00:29:45,251 INFO org.apache.juli.logging.DirectJDKLog [main] Starting service [Tomcat]
2022-05-18 00:29:45,251 INFO org.apache.juli.logging.DirectJDKLog [main] Starting Servlet engine: [Apache Tomcat/9.0.46]
2022-05-18 00:29:45,406 INFO org.apache.juli.logging.DirectJDKLog [main] Initializing Spring embedded WebApplicationContext
2022-05-18 00:29:45,407 INFO org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext [main] Root WebApplicationContext: initialization completed in 1770 ms
2022-05-18 00:29:46,177 INFO com.mongodb.diagnostics.logging.SLF4JLogger [main] Cluster created with settings {hosts=[localhost:27010], mode=SINGLE, requiredClusterType=UNKNOWN, serverSelectionTimeout='30000 ms'}
2022-05-18 00:29:46,262 INFO com.mongodb.diagnostics.logging.SLF4JLogger [cluster-ClusterId{value='6284844a70c5c2610be7d5d9', description='null'}-localhost:27010] Opened connection [connectionId{localValue:1, serverValue:18}] to localhost:27010
2022-05-18 00:29:46,274 INFO com.mongodb.diagnostics.logging.SLF4JLogger [cluster-ClusterId{value='6284844a70c5c2610be7d5d9', description='null'}-localhost:27010] Monitor thread successfully connected to server with description ServerDescription{address=localhost:27010, type=STANDALONE, state=CONNECTED, ok=true, minWireVersion=0, maxWireVersion=13, maxDocumentSize=16777216, logicalSessionTimeoutMinutes=30, roundTripTimeNanos=7283300}
2022-05-18 00:29:46,344 WARN org.springframework.data.convert.CustomConversions [main] Registering converter from class java.time.LocalDateTime to class org.joda.time.LocalDateTime as reading converter although it doesn't convert from a store-supported type! You might want to check your annotation setup at the converter implementation.
2022-05-18 00:29:46,588 WARN org.springframework.data.convert.CustomConversions [main] Registering converter from class java.time.LocalDateTime to class org.joda.time.LocalDateTime as reading converter although it doesn't convert from a store-supported type! You might want to check your annotation setup at the converter implementation.
2022-05-18 00:29:47,400 WARN com.netflix.config.sources.URLConfigurationSource [main] No URLs will be polled as dynamic configuration sources.
2022-05-18 00:29:47,401 INFO com.netflix.config.sources.URLConfigurationSource [main] To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2022-05-18 00:29:47,409 WARN com.netflix.config.sources.URLConfigurationSource [main] No URLs will be polled as dynamic configuration sources.
2022-05-18 00:29:47,409 INFO com.netflix.config.sources.URLConfigurationSource [main] To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2022-05-18 00:29:47,746 INFO org.springframework.scheduling.concurrent.ExecutorConfigurationSupport [main] Initializing ExecutorService 'applicationTaskExecutor'
2022-05-18 00:29:49,298 INFO org.springframework.cloud.netflix.eureka.config.DiscoveryClientOptionalArgsConfiguration [main] Eureka HTTP Client uses Jersey
2022-05-18 00:29:49,764 WARN org.springframework.cloud.loadbalancer.config.BlockingLoadBalancerClientAutoConfiguration$BlockingLoadBalancerClientRibbonWarnLogger [main] You already have RibbonLoadBalancerClient on your classpath. It will be used by default. As Spring Cloud Ribbon is in maintenance mode. We recommend switching to BlockingLoadBalancerClient instead. In order to use it, set the value of `spring.cloud.loadbalancer.ribbon.enabled` to `false` or remove spring-cloud-starter-netflix-ribbon from your project.
2022-05-18 00:29:50,445 INFO org.springframework.cloud.netflix.eureka.InstanceInfoFactory [main] Setting initial instance status as: STARTING
2022-05-18 00:29:50,504 INFO com.netflix.discovery.DiscoveryClient [main] Initializing Eureka in region us-east-1
2022-05-18 00:29:50,647 INFO com.netflix.discovery.provider.DiscoveryJerseyProvider [main] Using JSON encoding codec LegacyJacksonJson
2022-05-18 00:29:50,648 INFO com.netflix.discovery.provider.DiscoveryJerseyProvider [main] Using JSON decoding codec LegacyJacksonJson
2022-05-18 00:29:50,772 INFO com.netflix.discovery.provider.DiscoveryJerseyProvider [main] Using XML encoding codec XStreamXml
2022-05-18 00:29:50,772 INFO com.netflix.discovery.provider.DiscoveryJerseyProvider [main] Using XML decoding codec XStreamXml
2022-05-18 00:29:50,965 INFO com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver [main] Resolving eureka endpoints via configuration
2022-05-18 00:29:51,250 INFO com.netflix.discovery.DiscoveryClient [main] Disable delta property : false
2022-05-18 00:29:51,251 INFO com.netflix.discovery.DiscoveryClient [main] Single vip registry refresh property : null
2022-05-18 00:29:51,251 INFO com.netflix.discovery.DiscoveryClient [main] Force full registry fetch : false
2022-05-18 00:29:51,251 INFO com.netflix.discovery.DiscoveryClient [main] Application is null : false
2022-05-18 00:29:51,251 INFO com.netflix.discovery.DiscoveryClient [main] Registered Applications size is zero : true
2022-05-18 00:29:51,251 INFO com.netflix.discovery.DiscoveryClient [main] Application version is -1: true
2022-05-18 00:29:51,251 INFO com.netflix.discovery.DiscoveryClient [main] Getting all instance registry info from the eureka server
2022-05-18 00:29:51,338 INFO com.netflix.discovery.DiscoveryClient [main] The response status is 200
2022-05-18 00:29:51,340 INFO com.netflix.discovery.DiscoveryClient [main] Starting heartbeat executor: renew interval is: 30
2022-05-18 00:29:51,343 INFO com.netflix.discovery.InstanceInfoReplicator [main] InstanceInfoReplicator onDemand update allowed rate per min is 4
2022-05-18 00:29:51,346 INFO com.netflix.discovery.DiscoveryClient [main] Discovery Client initialized at timestamp 1652851791345 with initial instances count: 6
2022-05-18 00:29:51,353 INFO org.springframework.cloud.netflix.eureka.serviceregistry.EurekaServiceRegistry [main] Registering application SHOPPING-CART-COMMAND-SERVICE with eureka with status UP
2022-05-18 00:29:51,354 INFO com.netflix.discovery.DiscoveryClient$3 [main] Saw local status change event StatusChangeEvent [timestamp=1652851791353, current=UP, previous=STARTING]
2022-05-18 00:29:51,356 INFO com.netflix.discovery.DiscoveryClient [DiscoveryClient-InstanceInfoReplicator-0] DiscoveryClient_SHOPPING-CART-COMMAND-SERVICE/DESKTOP-4JQFJ2O.mshome.net:shopping-cart-command-service:8009: registering service...
2022-05-18 00:29:51,356 INFO org.apache.juli.logging.DirectJDKLog [main] Starting ProtocolHandler ["http-nio-8009"]
2022-05-18 00:29:51,379 INFO org.springframework.boot.web.embedded.tomcat.TomcatWebServer [main] Tomcat started on port(s): 8009 (http) with context path ''
2022-05-18 00:29:51,380 INFO org.springframework.cloud.netflix.eureka.serviceregistry.EurekaAutoServiceRegistration [main] Updating port to 8009
2022-05-18 00:29:51,388 INFO com.netflix.discovery.DiscoveryClient [DiscoveryClient-InstanceInfoReplicator-0] DiscoveryClient_SHOPPING-CART-COMMAND-SERVICE/DESKTOP-4JQFJ2O.mshome.net:shopping-cart-command-service:8009 - registration status: 204
2022-05-18 00:29:51,796 INFO org.springframework.boot.StartupInfoLogger [main] Started Application in 11.152 seconds (JVM running for 12.884)
2022-05-18 00:30:06,002 INFO org.apache.juli.logging.DirectJDKLog [http-nio-8009-exec-1] Initializing Spring DispatcherServlet 'dispatcherServlet'
2022-05-18 00:30:06,002 INFO org.springframework.web.servlet.FrameworkServlet [http-nio-8009-exec-1] Initializing Servlet 'dispatcherServlet'
2022-05-18 00:30:06,019 INFO org.springframework.web.servlet.FrameworkServlet [http-nio-8009-exec-1] Completed initialization in 16 ms
2022-05-18 00:32:24,717 INFO com.netflix.discovery.DiscoveryClient [DiscoveryClient-HeartbeatExecutor-0] DiscoveryClient_SHOPPING-CART-COMMAND-SERVICE/DESKTOP-4JQFJ2O.mshome.net:shopping-cart-command-service:8009 - Re-registering apps/SHOPPING-CART-COMMAND-SERVICE
2022-05-18 00:32:24,717 INFO com.netflix.discovery.DiscoveryClient [DiscoveryClient-HeartbeatExecutor-0] DiscoveryClient_SHOPPING-CART-COMMAND-SERVICE/DESKTOP-4JQFJ2O.mshome.net:shopping-cart-command-service:8009: registering service...
2022-05-18 00:32:24,721 INFO com.netflix.discovery.DiscoveryClient [DiscoveryClient-HeartbeatExecutor-0] DiscoveryClient_SHOPPING-CART-COMMAND-SERVICE/DESKTOP-4JQFJ2O.mshome.net:shopping-cart-command-service:8009 - registration status: 204
2022-05-18 00:32:24,754 INFO org.springframework.cloud.netflix.eureka.serviceregistry.EurekaServiceRegistry [SpringContextShutdownHook] Unregistering application SHOPPING-CART-COMMAND-SERVICE with eureka with status DOWN
2022-05-18 00:32:24,754 WARN com.netflix.discovery.DiscoveryClient$3 [SpringContextShutdownHook] Saw local status change event StatusChangeEvent [timestamp=1652851944754, current=DOWN, previous=UP]
2022-05-18 00:32:24,754 INFO com.netflix.discovery.DiscoveryClient [DiscoveryClient-InstanceInfoReplicator-0] DiscoveryClient_SHOPPING-CART-COMMAND-SERVICE/DESKTOP-4JQFJ2O.mshome.net:shopping-cart-command-service:8009: registering service...
2022-05-18 00:32:24,773 INFO com.netflix.discovery.DiscoveryClient [DiscoveryClient-InstanceInfoReplicator-0] DiscoveryClient_SHOPPING-CART-COMMAND-SERVICE/DESKTOP-4JQFJ2O.mshome.net:shopping-cart-command-service:8009 - registration status: 204
2022-05-18 00:32:25,137 INFO org.springframework.scheduling.concurrent.ExecutorConfigurationSupport [SpringContextShutdownHook] Shutting down ExecutorService 'applicationTaskExecutor'
2022-05-18 00:32:25,759 INFO com.netflix.discovery.DiscoveryClient [SpringContextShutdownHook] Shutting down DiscoveryClient ...
2022-05-18 00:32:28,782 INFO com.netflix.discovery.DiscoveryClient [SpringContextShutdownHook] Unregistering ...
2022-05-18 00:32:28,800 INFO com.netflix.discovery.DiscoveryClient [SpringContextShutdownHook] DiscoveryClient_SHOPPING-CART-COMMAND-SERVICE/DESKTOP-4JQFJ2O.mshome.net:shopping-cart-command-service:8009 - deregister  status: 200
2022-05-18 00:32:28,818 INFO com.netflix.discovery.DiscoveryClient [SpringContextShutdownHook] Completed shut down of DiscoveryClient
2022-05-18 00:32:35,840 INFO org.hibernate.validator.internal.util.Version [background-preinit] HV000001: Hibernate Validator 6.1.7.Final
2022-05-18 00:32:36,634 INFO org.springframework.cloud.config.client.ConfigServicePropertySourceLocator [main] Fetching config from server at : http://localhost:8003
2022-05-18 00:32:37,408 INFO org.springframework.cloud.config.client.ConfigServicePropertySourceLocator [main] Located environment: name=shopping-cart-command-service, profiles=[default], label=null, version=6beebd0254f32a276770508abbeae0daef39cce7, state=null
2022-05-18 00:32:37,409 INFO org.springframework.cloud.bootstrap.config.PropertySourceBootstrapConfiguration [main] Located property source: [BootstrapPropertySource {name='bootstrapProperties-configClient'}, BootstrapPropertySource {name='bootstrapProperties-https://github.com/abenitrust/swa_config/shopping-cart-command-service.yml'}]
2022-05-18 00:32:37,437 INFO org.springframework.boot.SpringApplication [main] No active profile set, falling back to default profiles: default
2022-05-18 00:32:38,023 INFO org.springframework.data.repository.config.RepositoryConfigurationDelegate [main] Bootstrapping Spring Data MongoDB repositories in DEFAULT mode.
2022-05-18 00:32:38,077 INFO org.springframework.data.repository.config.RepositoryConfigurationDelegate [main] Finished Spring Data repository scanning in 50ms. Found 1 MongoDB repository interfaces.
2022-05-18 00:32:38,359 INFO org.springframework.cloud.context.scope.GenericScope [main] BeanFactory id=5895182d-12eb-3dcb-a600-d1a95f2ffd58
2022-05-18 00:32:38,787 INFO org.springframework.boot.web.embedded.tomcat.TomcatWebServer [main] Tomcat initialized with port(s): 8009 (http)
2022-05-18 00:32:38,795 INFO org.apache.juli.logging.DirectJDKLog [main] Initializing ProtocolHandler ["http-nio-8009"]
2022-05-18 00:32:38,795 INFO org.apache.juli.logging.DirectJDKLog [main] Starting service [Tomcat]
2022-05-18 00:32:38,795 INFO org.apache.juli.logging.DirectJDKLog [main] Starting Servlet engine: [Apache Tomcat/9.0.46]
2022-05-18 00:32:38,921 INFO org.apache.juli.logging.DirectJDKLog [main] Initializing Spring embedded WebApplicationContext
2022-05-18 00:32:38,922 INFO org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext [main] Root WebApplicationContext: initialization completed in 1472 ms
2022-05-18 00:32:39,531 INFO com.mongodb.diagnostics.logging.SLF4JLogger [main] Cluster created with settings {hosts=[localhost:27010], mode=SINGLE, requiredClusterType=UNKNOWN, serverSelectionTimeout='30000 ms'}
2022-05-18 00:32:39,570 INFO com.mongodb.diagnostics.logging.SLF4JLogger [cluster-ClusterId{value='628484f75f815859c1fcecda', description='null'}-localhost:27010] Opened connection [connectionId{localValue:1, serverValue:19}] to localhost:27010
2022-05-18 00:32:39,578 INFO com.mongodb.diagnostics.logging.SLF4JLogger [cluster-ClusterId{value='628484f75f815859c1fcecda', description='null'}-localhost:27010] Monitor thread successfully connected to server with description ServerDescription{address=localhost:27010, type=STANDALONE, state=CONNECTED, ok=true, minWireVersion=0, maxWireVersion=13, maxDocumentSize=16777216, logicalSessionTimeoutMinutes=30, roundTripTimeNanos=3507800}
2022-05-18 00:32:39,609 WARN org.springframework.data.convert.CustomConversions [main] Registering converter from class java.time.LocalDateTime to class org.joda.time.LocalDateTime as reading converter although it doesn't convert from a store-supported type! You might want to check your annotation setup at the converter implementation.
2022-05-18 00:32:39,715 WARN org.springframework.data.convert.CustomConversions [main] Registering converter from class java.time.LocalDateTime to class org.joda.time.LocalDateTime as reading converter although it doesn't convert from a store-supported type! You might want to check your annotation setup at the converter implementation.
2022-05-18 00:32:40,171 WARN com.netflix.config.sources.URLConfigurationSource [main] No URLs will be polled as dynamic configuration sources.
2022-05-18 00:32:40,172 INFO com.netflix.config.sources.URLConfigurationSource [main] To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2022-05-18 00:32:40,175 WARN com.netflix.config.sources.URLConfigurationSource [main] No URLs will be polled as dynamic configuration sources.
2022-05-18 00:32:40,175 INFO com.netflix.config.sources.URLConfigurationSource [main] To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2022-05-18 00:32:40,393 INFO org.springframework.scheduling.concurrent.ExecutorConfigurationSupport [main] Initializing ExecutorService 'applicationTaskExecutor'
2022-05-18 00:32:41,633 INFO org.springframework.cloud.netflix.eureka.config.DiscoveryClientOptionalArgsConfiguration [main] Eureka HTTP Client uses Jersey
2022-05-18 00:32:42,080 WARN org.springframework.cloud.loadbalancer.config.BlockingLoadBalancerClientAutoConfiguration$BlockingLoadBalancerClientRibbonWarnLogger [main] You already have RibbonLoadBalancerClient on your classpath. It will be used by default. As Spring Cloud Ribbon is in maintenance mode. We recommend switching to BlockingLoadBalancerClient instead. In order to use it, set the value of `spring.cloud.loadbalancer.ribbon.enabled` to `false` or remove spring-cloud-starter-netflix-ribbon from your project.
2022-05-18 00:32:42,756 INFO org.springframework.cloud.netflix.eureka.InstanceInfoFactory [main] Setting initial instance status as: STARTING
2022-05-18 00:32:42,806 INFO com.netflix.discovery.DiscoveryClient [main] Initializing Eureka in region us-east-1
2022-05-18 00:32:42,946 INFO com.netflix.discovery.provider.DiscoveryJerseyProvider [main] Using JSON encoding codec LegacyJacksonJson
2022-05-18 00:32:42,946 INFO com.netflix.discovery.provider.DiscoveryJerseyProvider [main] Using JSON decoding codec LegacyJacksonJson
2022-05-18 00:32:43,091 INFO com.netflix.discovery.provider.DiscoveryJerseyProvider [main] Using XML encoding codec XStreamXml
2022-05-18 00:32:43,091 INFO com.netflix.discovery.provider.DiscoveryJerseyProvider [main] Using XML decoding codec XStreamXml
2022-05-18 00:32:43,282 INFO com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver [main] Resolving eureka endpoints via configuration
2022-05-18 00:32:43,585 INFO com.netflix.discovery.DiscoveryClient [main] Disable delta property : false
2022-05-18 00:32:43,586 INFO com.netflix.discovery.DiscoveryClient [main] Single vip registry refresh property : null
2022-05-18 00:32:43,586 INFO com.netflix.discovery.DiscoveryClient [main] Force full registry fetch : false
2022-05-18 00:32:43,586 INFO com.netflix.discovery.DiscoveryClient [main] Application is null : false
2022-05-18 00:32:43,586 INFO com.netflix.discovery.DiscoveryClient [main] Registered Applications size is zero : true
2022-05-18 00:32:43,586 INFO com.netflix.discovery.DiscoveryClient [main] Application version is -1: true
2022-05-18 00:32:43,586 INFO com.netflix.discovery.DiscoveryClient [main] Getting all instance registry info from the eureka server
2022-05-18 00:32:43,687 INFO com.netflix.discovery.DiscoveryClient [main] The response status is 200
2022-05-18 00:32:43,689 INFO com.netflix.discovery.DiscoveryClient [main] Starting heartbeat executor: renew interval is: 30
2022-05-18 00:32:43,692 INFO com.netflix.discovery.InstanceInfoReplicator [main] InstanceInfoReplicator onDemand update allowed rate per min is 4
2022-05-18 00:32:43,696 INFO com.netflix.discovery.DiscoveryClient [main] Discovery Client initialized at timestamp 1652851963695 with initial instances count: 6
2022-05-18 00:32:43,703 INFO org.springframework.cloud.netflix.eureka.serviceregistry.EurekaServiceRegistry [main] Registering application SHOPPING-CART-COMMAND-SERVICE with eureka with status UP
2022-05-18 00:32:43,704 INFO com.netflix.discovery.DiscoveryClient$3 [main] Saw local status change event StatusChangeEvent [timestamp=1652851963704, current=UP, previous=STARTING]
2022-05-18 00:32:43,706 INFO com.netflix.discovery.DiscoveryClient [DiscoveryClient-InstanceInfoReplicator-0] DiscoveryClient_SHOPPING-CART-COMMAND-SERVICE/DESKTOP-4JQFJ2O.mshome.net:shopping-cart-command-service:8009: registering service...
2022-05-18 00:32:43,706 INFO org.apache.juli.logging.DirectJDKLog [main] Starting ProtocolHandler ["http-nio-8009"]
2022-05-18 00:32:43,730 INFO org.springframework.boot.web.embedded.tomcat.TomcatWebServer [main] Tomcat started on port(s): 8009 (http) with context path ''
2022-05-18 00:32:43,730 INFO org.springframework.cloud.netflix.eureka.serviceregistry.EurekaAutoServiceRegistration [main] Updating port to 8009
2022-05-18 00:32:43,743 INFO com.netflix.discovery.DiscoveryClient [DiscoveryClient-InstanceInfoReplicator-0] DiscoveryClient_SHOPPING-CART-COMMAND-SERVICE/DESKTOP-4JQFJ2O.mshome.net:shopping-cart-command-service:8009 - registration status: 204
2022-05-18 00:32:44,176 INFO org.springframework.boot.StartupInfoLogger [main] Started Application in 9.218 seconds (JVM running for 10.434)
2022-05-18 00:32:54,650 INFO org.apache.juli.logging.DirectJDKLog [http-nio-8009-exec-1] Initializing Spring DispatcherServlet 'dispatcherServlet'
2022-05-18 00:32:54,651 INFO org.springframework.web.servlet.FrameworkServlet [http-nio-8009-exec-1] Initializing Servlet 'dispatcherServlet'
2022-05-18 00:32:54,666 INFO org.springframework.web.servlet.FrameworkServlet [http-nio-8009-exec-1] Completed initialization in 15 ms
2022-05-18 00:32:54,826 INFO com.mongodb.diagnostics.logging.SLF4JLogger [http-nio-8009-exec-1] Opened connection [connectionId{localValue:2, serverValue:20}] to localhost:27010
2022-05-18 00:32:54,857 INFO com.swa.application.integration.EventService [http-nio-8009-exec-1] Publish: CART-CREATED with payload: ShoppingCart(shoppingCartNumber=string, cartLines=null)
2022-05-18 00:32:54,876 INFO org.apache.kafka.common.config.AbstractConfig [http-nio-8009-exec-1] ProducerConfig values: 
	acks = 1
	batch.size = 16384
	bootstrap.servers = [localhost:9092]
	buffer.memory = 33554432
	client.dns.lookup = default
	client.id = producer-1
	compression.type = none
	connections.max.idle.ms = 540000
	delivery.timeout.ms = 120000
	enable.idempotence = false
	interceptor.classes = []
	key.serializer = class org.apache.kafka.common.serialization.StringSerializer
	linger.ms = 0
	max.block.ms = 60000
	max.in.flight.requests.per.connection = 5
	max.request.size = 1048576
	metadata.max.age.ms = 300000
	metadata.max.idle.ms = 300000
	metric.reporters = []
	metrics.num.samples = 2
	metrics.recording.level = INFO
	metrics.sample.window.ms = 30000
	partitioner.class = class org.apache.kafka.clients.producer.internals.DefaultPartitioner
	receive.buffer.bytes = 32768
	reconnect.backoff.max.ms = 1000
	reconnect.backoff.ms = 50
	request.timeout.ms = 30000
	retries = 2147483647
	retry.backoff.ms = 100
	sasl.client.callback.handler.class = null
	sasl.jaas.config = null
	sasl.kerberos.kinit.cmd = /usr/bin/kinit
	sasl.kerberos.min.time.before.relogin = 60000
	sasl.kerberos.service.name = null
	sasl.kerberos.ticket.renew.jitter = 0.05
	sasl.kerberos.ticket.renew.window.factor = 0.8
	sasl.login.callback.handler.class = null
	sasl.login.class = null
	sasl.login.refresh.buffer.seconds = 300
	sasl.login.refresh.min.period.seconds = 60
	sasl.login.refresh.window.factor = 0.8
	sasl.login.refresh.window.jitter = 0.05
	sasl.mechanism = GSSAPI
	security.protocol = PLAINTEXT
	security.providers = null
	send.buffer.bytes = 131072
	ssl.cipher.suites = null
	ssl.enabled.protocols = [TLSv1.2]
	ssl.endpoint.identification.algorithm = https
	ssl.key.password = null
	ssl.keymanager.algorithm = SunX509
	ssl.keystore.location = null
	ssl.keystore.password = null
	ssl.keystore.type = JKS
	ssl.protocol = TLSv1.2
	ssl.provider = null
	ssl.secure.random.implementation = null
	ssl.trustmanager.algorithm = PKIX
	ssl.truststore.location = null
	ssl.truststore.password = null
	ssl.truststore.type = JKS
	transaction.timeout.ms = 60000
	transactional.id = null
	value.serializer = class org.springframework.kafka.support.serializer.JsonSerializer

2022-05-18 00:32:54,928 INFO org.apache.kafka.common.utils.AppInfoParser$AppInfo [http-nio-8009-exec-1] Kafka version: 2.5.1
2022-05-18 00:32:54,928 INFO org.apache.kafka.common.utils.AppInfoParser$AppInfo [http-nio-8009-exec-1] Kafka commitId: 0efa8fb0f4c73d92
2022-05-18 00:32:54,929 INFO org.apache.kafka.common.utils.AppInfoParser$AppInfo [http-nio-8009-exec-1] Kafka startTimeMs: 1652851974927
2022-05-18 00:32:55,115 INFO org.apache.kafka.clients.Metadata [kafka-producer-network-thread | producer-1] [Producer clientId=producer-1] Cluster ID: yVtTKKF1T0OFDZLLqn20jg
2022-05-18 00:33:30,422 INFO com.swa.application.integration.EventService [http-nio-8009-exec-2] Publish: CART-CREATED with payload: ShoppingCart(shoppingCartNumber=0001, cartLines=null)
2022-05-18 00:33:47,801 INFO com.netflix.config.ChainedDynamicProperty$ChainLink [http-nio-8009-exec-3] Flipping property: product-service.ribbon.ActiveConnectionsLimit to use NEXT property: niws.loadbalancer.availabilityFilteringRule.activeConnectionsLimit = 2147483647
2022-05-18 00:33:47,837 INFO com.netflix.util.concurrent.ShutdownEnabledTimer [http-nio-8009-exec-3] Shutdown hook installed for: NFLoadBalancer-PingTimer-product-service
2022-05-18 00:33:47,839 INFO com.netflix.loadbalancer.BaseLoadBalancer [http-nio-8009-exec-3] Client: product-service instantiated a LoadBalancer: DynamicServerListLoadBalancer:{NFLoadBalancer:name=product-service,current list of Servers=[],Load balancer stats=Zone stats: {},Server stats: []}ServerList:null
2022-05-18 00:33:47,848 INFO com.netflix.loadbalancer.DynamicServerListLoadBalancer [http-nio-8009-exec-3] Using serverListUpdater PollingServerListUpdater
2022-05-18 00:33:47,880 INFO com.netflix.config.ChainedDynamicProperty$ChainLink [http-nio-8009-exec-3] Flipping property: product-service.ribbon.ActiveConnectionsLimit to use NEXT property: niws.loadbalancer.availabilityFilteringRule.activeConnectionsLimit = 2147483647
2022-05-18 00:33:47,882 INFO com.netflix.loadbalancer.DynamicServerListLoadBalancer [http-nio-8009-exec-3] DynamicServerListLoadBalancer for client product-service initialized: DynamicServerListLoadBalancer:{NFLoadBalancer:name=product-service,current list of Servers=[DESKTOP-4JQFJ2O.mshome.net:8006],Load balancer stats=Zone stats: {defaultzone=[Zone:defaultzone;	Instance count:1;	Active connections count: 0;	Circuit breaker tripped count: 0;	Active connections per server: 0.0;]
},Server stats: [[Server:DESKTOP-4JQFJ2O.mshome.net:8006;	Zone:defaultZone;	Total Requests:0;	Successive connection failure:0;	Total blackout seconds:0;	Last connection made:Wed Dec 31 18:00:00 CST 1969;	First connection made: Wed Dec 31 18:00:00 CST 1969;	Active Connections:0;	total failure count in last (1000) msecs:0;	average resp time:0.0;	90 percentile resp time:0.0;	95 percentile resp time:0.0;	min resp time:0.0;	max resp time:0.0;	stddev resp time:0.0]
]}ServerList:org.springframework.cloud.netflix.ribbon.eureka.DomainExtractingServerList@55a8ca0e
2022-05-18 00:33:47,976 INFO com.swa.application.integration.EventService [http-nio-8009-exec-3] Publish: CART-UPDATED with payload: ShoppingCart(shoppingCartNumber=0001, cartLines=[CartLine(product=Product(productNumber=1), quantity=5)])
2022-05-18 00:33:48,863 INFO com.netflix.config.ChainedDynamicProperty$ChainLink [PollingServerListUpdater-0] Flipping property: product-service.ribbon.ActiveConnectionsLimit to use NEXT property: niws.loadbalancer.availabilityFilteringRule.activeConnectionsLimit = 2147483647
2022-05-18 00:33:52,870 INFO com.swa.application.integration.EventService [http-nio-8009-exec-4] Publish: CART-UPDATED with payload: ShoppingCart(shoppingCartNumber=0001, cartLines=[CartLine(product=Product(productNumber=1), quantity=5), CartLine(product=Product(productNumber=2), quantity=5)])
2022-05-18 00:34:28,061 INFO com.swa.application.integration.EventService [http-nio-8009-exec-6] Publish: CART-UPDATED with payload: ShoppingCart(shoppingCartNumber=0001, cartLines=[CartLine(product=Product(productNumber=1), quantity=5)])
2022-05-18 00:34:42,287 WARN org.springframework.web.servlet.handler.AbstractHandlerExceptionResolver [http-nio-8009-exec-7] Resolved [org.springframework.web.HttpRequestMethodNotSupportedException: Request method 'PUT' not supported]
2022-05-18 00:36:06,929 INFO com.swa.application.integration.EventService [http-nio-8009-exec-9] Publish: CART-CREATED with payload: ShoppingCart(shoppingCartNumber=0001, cartLines=null)
2022-05-18 00:36:06,981 INFO com.swa.application.integration.EventService [http-nio-8009-exec-10] Publish: CART-UPDATED with payload: ShoppingCart(shoppingCartNumber=0001, cartLines=[CartLine(product=Product(productNumber=1), quantity=5)])
2022-05-18 00:36:07,009 INFO com.swa.application.integration.EventService [http-nio-8009-exec-1] Publish: CART-UPDATED with payload: ShoppingCart(shoppingCartNumber=0001, cartLines=[CartLine(product=Product(productNumber=1), quantity=5), CartLine(product=Product(productNumber=2), quantity=5)])
2022-05-18 00:36:07,041 INFO com.swa.application.integration.EventService [http-nio-8009-exec-2] Publish: CART-UPDATED with payload: ShoppingCart(shoppingCartNumber=0001, cartLines=[CartLine(product=Product(productNumber=1), quantity=5)])
2022-05-18 00:36:12,645 WARN org.springframework.web.servlet.handler.AbstractHandlerExceptionResolver [http-nio-8009-exec-3] Resolved [org.springframework.web.HttpRequestMethodNotSupportedException: Request method 'PUT' not supported]
2022-05-18 00:36:33,574 INFO com.swa.application.integration.EventService [http-nio-8009-exec-4] Publish: CART-CREATED with payload: ShoppingCart(shoppingCartNumber=0001, cartLines=null)
2022-05-18 00:36:33,631 INFO com.swa.application.integration.EventService [http-nio-8009-exec-5] Publish: CART-UPDATED with payload: ShoppingCart(shoppingCartNumber=0001, cartLines=[CartLine(product=Product(productNumber=1), quantity=5)])
2022-05-18 00:36:33,651 INFO com.swa.application.integration.EventService [http-nio-8009-exec-6] Publish: CART-UPDATED with payload: ShoppingCart(shoppingCartNumber=0001, cartLines=[CartLine(product=Product(productNumber=1), quantity=5), CartLine(product=Product(productNumber=2), quantity=5)])
2022-05-18 00:36:33,701 INFO com.swa.application.integration.EventService [http-nio-8009-exec-7] Publish: CART-UPDATED with payload: ShoppingCart(shoppingCartNumber=0001, cartLines=[CartLine(product=Product(productNumber=1), quantity=5)])
2022-05-18 00:36:36,800 INFO com.swa.application.integration.EventService [http-nio-8009-exec-8] Publish: CART-UPDATED with payload: ShoppingCart(shoppingCartNumber=0001, cartLines=[CartLine(product=Product(productNumber=1), quantity=5)])
2022-05-18 00:37:43,591 INFO com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver [AsyncResolver-bootstrap-executor-0] Resolving eureka endpoints via configuration
2022-05-18 00:38:56,965 INFO com.swa.application.integration.EventService [http-nio-8009-exec-10] Publish: CART-CREATED with payload: ShoppingCart(shoppingCartNumber=0001, cartLines=null)
2022-05-18 00:38:57,009 INFO com.swa.application.integration.EventService [http-nio-8009-exec-1] Publish: CART-UPDATED with payload: ShoppingCart(shoppingCartNumber=0001, cartLines=[CartLine(product=Product(productNumber=1), quantity=5)])
2022-05-18 00:38:57,033 INFO com.swa.application.integration.EventService [http-nio-8009-exec-2] Publish: CART-UPDATED with payload: ShoppingCart(shoppingCartNumber=0001, cartLines=[CartLine(product=Product(productNumber=1), quantity=5), CartLine(product=Product(productNumber=2), quantity=5)])
2022-05-18 00:38:57,060 INFO com.swa.application.integration.EventService [http-nio-8009-exec-3] Publish: CART-UPDATED with payload: ShoppingCart(shoppingCartNumber=0001, cartLines=[CartLine(product=Product(productNumber=1), quantity=5)])
2022-05-18 00:39:12,759 INFO com.swa.application.integration.EventService [http-nio-8009-exec-4] Publish: CART-UPDATED with payload: ShoppingCart(shoppingCartNumber=0001, cartLines=[CartLine(product=Product(productNumber=1), quantity=5)])
2022-05-18 00:39:46,100 INFO com.swa.application.integration.EventService [http-nio-8009-exec-5] Publish: CART-CREATED with payload: ShoppingCart(shoppingCartNumber=0001, cartLines=null)
2022-05-18 00:39:46,163 INFO com.swa.application.integration.EventService [http-nio-8009-exec-6] Publish: CART-UPDATED with payload: ShoppingCart(shoppingCartNumber=0001, cartLines=[CartLine(product=Product(productNumber=1), quantity=5)])
2022-05-18 00:39:46,193 INFO com.swa.application.integration.EventService [http-nio-8009-exec-7] Publish: CART-UPDATED with payload: ShoppingCart(shoppingCartNumber=0001, cartLines=[CartLine(product=Product(productNumber=1), quantity=5), CartLine(product=Product(productNumber=2), quantity=5)])
2022-05-18 00:39:46,230 INFO com.swa.application.integration.EventService [http-nio-8009-exec-8] Publish: CART-UPDATED with payload: ShoppingCart(shoppingCartNumber=0001, cartLines=[CartLine(product=Product(productNumber=1), quantity=5)])
2022-05-18 00:39:46,253 INFO com.swa.application.integration.EventService [http-nio-8009-exec-9] Publish: CART-UPDATED with payload: ShoppingCart(shoppingCartNumber=0001, cartLines=[CartLine(product=Product(productNumber=1), quantity=5)])
2022-05-18 00:39:54,019 INFO com.netflix.config.ChainedDynamicProperty$ChainLink [http-nio-8009-exec-10] Flipping property: order-service.ribbon.ActiveConnectionsLimit to use NEXT property: niws.loadbalancer.availabilityFilteringRule.activeConnectionsLimit = 2147483647
2022-05-18 00:39:54,022 INFO com.netflix.util.concurrent.ShutdownEnabledTimer [http-nio-8009-exec-10] Shutdown hook installed for: NFLoadBalancer-PingTimer-order-service
2022-05-18 00:39:54,022 INFO com.netflix.loadbalancer.BaseLoadBalancer [http-nio-8009-exec-10] Client: order-service instantiated a LoadBalancer: DynamicServerListLoadBalancer:{NFLoadBalancer:name=order-service,current list of Servers=[],Load balancer stats=Zone stats: {},Server stats: []}ServerList:null
2022-05-18 00:39:54,023 INFO com.netflix.loadbalancer.DynamicServerListLoadBalancer [http-nio-8009-exec-10] Using serverListUpdater PollingServerListUpdater
2022-05-18 00:39:54,025 INFO com.netflix.config.ChainedDynamicProperty$ChainLink [http-nio-8009-exec-10] Flipping property: order-service.ribbon.ActiveConnectionsLimit to use NEXT property: niws.loadbalancer.availabilityFilteringRule.activeConnectionsLimit = 2147483647
2022-05-18 00:39:54,026 INFO com.netflix.loadbalancer.DynamicServerListLoadBalancer [http-nio-8009-exec-10] DynamicServerListLoadBalancer for client order-service initialized: DynamicServerListLoadBalancer:{NFLoadBalancer:name=order-service,current list of Servers=[DESKTOP-4JQFJ2O.mshome.net:8004],Load balancer stats=Zone stats: {defaultzone=[Zone:defaultzone;	Instance count:1;	Active connections count: 0;	Circuit breaker tripped count: 0;	Active connections per server: 0.0;]
},Server stats: [[Server:DESKTOP-4JQFJ2O.mshome.net:8004;	Zone:defaultZone;	Total Requests:0;	Successive connection failure:0;	Total blackout seconds:0;	Last connection made:Wed Dec 31 18:00:00 CST 1969;	First connection made: Wed Dec 31 18:00:00 CST 1969;	Active Connections:0;	total failure count in last (1000) msecs:0;	average resp time:0.0;	90 percentile resp time:0.0;	95 percentile resp time:0.0;	min resp time:0.0;	max resp time:0.0;	stddev resp time:0.0]
]}ServerList:org.springframework.cloud.netflix.ribbon.eureka.DomainExtractingServerList@2ae0d418
2022-05-18 00:39:54,262 INFO com.swa.application.service.CartService [http-nio-8009-exec-10] ShoppingCart(shoppingCartNumber=0001, cartLines=[CartLine(product=Product(productNumber=1), quantity=5)])checked out!
2022-05-18 00:39:54,277 INFO com.swa.application.integration.EventService [http-nio-8009-exec-10] Publish: CART-DELETED with payload: ShoppingCart(shoppingCartNumber=0001, cartLines=[CartLine(product=Product(productNumber=1), quantity=5)])
2022-05-18 00:39:55,041 INFO com.netflix.config.ChainedDynamicProperty$ChainLink [PollingServerListUpdater-0] Flipping property: order-service.ribbon.ActiveConnectionsLimit to use NEXT property: niws.loadbalancer.availabilityFilteringRule.activeConnectionsLimit = 2147483647
2022-05-18 00:41:48,275 INFO com.swa.application.integration.EventService [http-nio-8009-exec-2] Publish: CART-CREATED with payload: ShoppingCart(shoppingCartNumber=0001, cartLines=null)
2022-05-18 00:41:48,312 INFO com.swa.application.integration.EventService [http-nio-8009-exec-3] Publish: CART-UPDATED with payload: ShoppingCart(shoppingCartNumber=0001, cartLines=[CartLine(product=Product(productNumber=1), quantity=5)])
2022-05-18 00:41:48,337 INFO com.swa.application.integration.EventService [http-nio-8009-exec-4] Publish: CART-UPDATED with payload: ShoppingCart(shoppingCartNumber=0001, cartLines=[CartLine(product=Product(productNumber=1), quantity=5), CartLine(product=Product(productNumber=2), quantity=5)])
2022-05-18 00:41:48,363 INFO com.swa.application.integration.EventService [http-nio-8009-exec-5] Publish: CART-UPDATED with payload: ShoppingCart(shoppingCartNumber=0001, cartLines=[CartLine(product=Product(productNumber=1), quantity=5)])
2022-05-18 00:41:48,381 INFO com.swa.application.integration.EventService [http-nio-8009-exec-6] Publish: CART-UPDATED with payload: ShoppingCart(shoppingCartNumber=0001, cartLines=[CartLine(product=Product(productNumber=1), quantity=5)])
2022-05-18 00:41:56,176 INFO com.swa.application.service.CartService [http-nio-8009-exec-7] ShoppingCart(shoppingCartNumber=0001, cartLines=[CartLine(product=Product(productNumber=1), quantity=5)])checked out!
2022-05-18 00:41:56,182 INFO com.swa.application.integration.EventService [http-nio-8009-exec-7] Publish: CART-DELETED with payload: ShoppingCart(shoppingCartNumber=0001, cartLines=[CartLine(product=Product(productNumber=1), quantity=5)])
2022-05-18 00:42:43,593 INFO com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver [AsyncResolver-bootstrap-executor-0] Resolving eureka endpoints via configuration
2022-05-18 00:45:23,034 INFO com.swa.application.integration.EventService [http-nio-8009-exec-9] Publish: CART-CREATED with payload: ShoppingCart(shoppingCartNumber=0001, cartLines=null)
2022-05-18 00:45:23,080 INFO com.swa.application.integration.EventService [http-nio-8009-exec-10] Publish: CART-UPDATED with payload: ShoppingCart(shoppingCartNumber=0001, cartLines=[CartLine(product=Product(productNumber=1), quantity=5)])
2022-05-18 00:45:23,102 INFO com.swa.application.integration.EventService [http-nio-8009-exec-1] Publish: CART-UPDATED with payload: ShoppingCart(shoppingCartNumber=0001, cartLines=[CartLine(product=Product(productNumber=1), quantity=5), CartLine(product=Product(productNumber=2), quantity=5)])
2022-05-18 00:45:23,129 INFO com.swa.application.integration.EventService [http-nio-8009-exec-2] Publish: CART-UPDATED with payload: ShoppingCart(shoppingCartNumber=0001, cartLines=[CartLine(product=Product(productNumber=1), quantity=5)])
2022-05-18 00:45:23,146 INFO com.swa.application.integration.EventService [http-nio-8009-exec-3] Publish: CART-UPDATED with payload: ShoppingCart(shoppingCartNumber=0001, cartLines=[CartLine(product=Product(productNumber=1), quantity=5)])
2022-05-18 00:45:25,251 INFO com.swa.application.service.CartService [http-nio-8009-exec-4] ShoppingCart(shoppingCartNumber=0001, cartLines=[CartLine(product=Product(productNumber=1), quantity=5)])checked out!
2022-05-18 00:45:25,259 INFO com.swa.application.integration.EventService [http-nio-8009-exec-4] Publish: CART-DELETED with payload: ShoppingCart(shoppingCartNumber=0001, cartLines=[CartLine(product=Product(productNumber=1), quantity=5)])
2022-05-18 00:47:43,605 INFO com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver [AsyncResolver-bootstrap-executor-0] Resolving eureka endpoints via configuration
2022-05-18 00:48:23,089 INFO com.swa.application.integration.EventService [http-nio-8009-exec-6] Publish: CART-CREATED with payload: ShoppingCart(shoppingCartNumber=0001, cartLines=null)
2022-05-18 00:48:23,133 INFO com.swa.application.integration.EventService [http-nio-8009-exec-7] Publish: CART-UPDATED with payload: ShoppingCart(shoppingCartNumber=0001, cartLines=[CartLine(product=Product(productNumber=1), quantity=5)])
2022-05-18 00:48:23,154 INFO com.swa.application.integration.EventService [http-nio-8009-exec-8] Publish: CART-UPDATED with payload: ShoppingCart(shoppingCartNumber=0001, cartLines=[CartLine(product=Product(productNumber=1), quantity=5), CartLine(product=Product(productNumber=2), quantity=5)])
2022-05-18 00:48:23,182 INFO com.swa.application.integration.EventService [http-nio-8009-exec-9] Publish: CART-UPDATED with payload: ShoppingCart(shoppingCartNumber=0001, cartLines=[CartLine(product=Product(productNumber=1), quantity=5)])
2022-05-18 00:48:23,202 INFO com.swa.application.integration.EventService [http-nio-8009-exec-10] Publish: CART-UPDATED with payload: ShoppingCart(shoppingCartNumber=0001, cartLines=[CartLine(product=Product(productNumber=1), quantity=5)])
2022-05-18 00:48:25,273 INFO com.swa.application.service.CartService [http-nio-8009-exec-1] ShoppingCart(shoppingCartNumber=0001, cartLines=[CartLine(product=Product(productNumber=1), quantity=5)])checked out!
2022-05-18 00:48:25,278 INFO com.swa.application.integration.EventService [http-nio-8009-exec-1] Publish: CART-DELETED with payload: ShoppingCart(shoppingCartNumber=0001, cartLines=[CartLine(product=Product(productNumber=1), quantity=5)])
2022-05-18 00:48:48,858 INFO com.swa.application.integration.EventService [http-nio-8009-exec-2] Publish: CART-CREATED with payload: ShoppingCart(shoppingCartNumber=0001, cartLines=null)
2022-05-18 00:48:48,893 INFO com.swa.application.integration.EventService [http-nio-8009-exec-3] Publish: CART-UPDATED with payload: ShoppingCart(shoppingCartNumber=0001, cartLines=[CartLine(product=Product(productNumber=1), quantity=5)])
2022-05-18 00:48:48,911 INFO com.swa.application.integration.EventService [http-nio-8009-exec-4] Publish: CART-UPDATED with payload: ShoppingCart(shoppingCartNumber=0001, cartLines=[CartLine(product=Product(productNumber=1), quantity=5), CartLine(product=Product(productNumber=2), quantity=5)])
2022-05-18 00:48:48,935 INFO com.swa.application.integration.EventService [http-nio-8009-exec-5] Publish: CART-UPDATED with payload: ShoppingCart(shoppingCartNumber=0001, cartLines=[CartLine(product=Product(productNumber=1), quantity=5)])
2022-05-18 00:48:48,953 INFO com.swa.application.integration.EventService [http-nio-8009-exec-6] Publish: CART-UPDATED with payload: ShoppingCart(shoppingCartNumber=0001, cartLines=[CartLine(product=Product(productNumber=1), quantity=5)])
2022-05-18 00:48:51,032 INFO com.swa.application.service.CartService [http-nio-8009-exec-7] ShoppingCart(shoppingCartNumber=0001, cartLines=[CartLine(product=Product(productNumber=1), quantity=5)])checked out!
2022-05-18 00:48:51,037 INFO com.swa.application.integration.EventService [http-nio-8009-exec-7] Publish: CART-DELETED with payload: ShoppingCart(shoppingCartNumber=0001, cartLines=[CartLine(product=Product(productNumber=1), quantity=5)])
2022-05-18 00:51:22,684 INFO com.swa.application.integration.EventService [http-nio-8009-exec-9] Publish: CART-CREATED with payload: ShoppingCart(shoppingCartNumber=0001, cartLines=null)
2022-05-18 00:51:22,740 INFO com.swa.application.integration.EventService [http-nio-8009-exec-10] Publish: CART-UPDATED with payload: ShoppingCart(shoppingCartNumber=0001, cartLines=[CartLine(product=Product(productNumber=1), quantity=5)])
2022-05-18 00:51:22,768 INFO com.swa.application.integration.EventService [http-nio-8009-exec-1] Publish: CART-UPDATED with payload: ShoppingCart(shoppingCartNumber=0001, cartLines=[CartLine(product=Product(productNumber=1), quantity=5), CartLine(product=Product(productNumber=2), quantity=5)])
2022-05-18 00:51:22,809 INFO com.swa.application.integration.EventService [http-nio-8009-exec-2] Publish: CART-UPDATED with payload: ShoppingCart(shoppingCartNumber=0001, cartLines=[CartLine(product=Product(productNumber=1), quantity=5)])
2022-05-18 00:51:22,836 INFO com.swa.application.integration.EventService [http-nio-8009-exec-3] Publish: CART-UPDATED with payload: ShoppingCart(shoppingCartNumber=0001, cartLines=[CartLine(product=Product(productNumber=1), quantity=5)])
2022-05-18 00:51:24,920 INFO com.swa.application.service.CartService [http-nio-8009-exec-4] ShoppingCart(shoppingCartNumber=0001, cartLines=[CartLine(product=Product(productNumber=1), quantity=5)])checked out!
2022-05-18 00:51:24,926 INFO com.swa.application.integration.EventService [http-nio-8009-exec-4] Publish: CART-DELETED with payload: ShoppingCart(shoppingCartNumber=0001, cartLines=[CartLine(product=Product(productNumber=1), quantity=5)])
2022-05-18 00:52:20,576 INFO com.swa.application.integration.EventService [http-nio-8009-exec-5] Publish: CART-CREATED with payload: ShoppingCart(shoppingCartNumber=0001, cartLines=null)
2022-05-18 00:52:20,611 INFO com.swa.application.integration.EventService [http-nio-8009-exec-6] Publish: CART-UPDATED with payload: ShoppingCart(shoppingCartNumber=0001, cartLines=[CartLine(product=Product(productNumber=1), quantity=5)])
2022-05-18 00:52:20,628 INFO com.swa.application.integration.EventService [http-nio-8009-exec-7] Publish: CART-UPDATED with payload: ShoppingCart(shoppingCartNumber=0001, cartLines=[CartLine(product=Product(productNumber=1), quantity=5), CartLine(product=Product(productNumber=2), quantity=5)])
2022-05-18 00:52:20,652 INFO com.swa.application.integration.EventService [http-nio-8009-exec-8] Publish: CART-UPDATED with payload: ShoppingCart(shoppingCartNumber=0001, cartLines=[CartLine(product=Product(productNumber=1), quantity=5)])
2022-05-18 00:52:20,669 INFO com.swa.application.integration.EventService [http-nio-8009-exec-9] Publish: CART-UPDATED with payload: ShoppingCart(shoppingCartNumber=0001, cartLines=[CartLine(product=Product(productNumber=1), quantity=5)])
2022-05-18 00:52:22,764 INFO com.swa.application.service.CartService [http-nio-8009-exec-10] ShoppingCart(shoppingCartNumber=0001, cartLines=[CartLine(product=Product(productNumber=1), quantity=5)])checked out!
2022-05-18 00:52:22,770 INFO com.swa.application.integration.EventService [http-nio-8009-exec-10] Publish: CART-DELETED with payload: ShoppingCart(shoppingCartNumber=0001, cartLines=[CartLine(product=Product(productNumber=1), quantity=5)])
2022-05-18 00:52:43,609 INFO com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver [AsyncResolver-bootstrap-executor-0] Resolving eureka endpoints via configuration
2022-05-18 00:53:53,537 INFO com.swa.application.integration.EventService [http-nio-8009-exec-2] Publish: CART-CREATED with payload: ShoppingCart(shoppingCartNumber=0001, cartLines=null)
2022-05-18 00:53:53,589 INFO com.swa.application.integration.EventService [http-nio-8009-exec-3] Publish: CART-UPDATED with payload: ShoppingCart(shoppingCartNumber=0001, cartLines=[CartLine(product=Product(productNumber=1), quantity=5)])
2022-05-18 00:53:53,609 INFO com.swa.application.integration.EventService [http-nio-8009-exec-4] Publish: CART-UPDATED with payload: ShoppingCart(shoppingCartNumber=0001, cartLines=[CartLine(product=Product(productNumber=1), quantity=5), CartLine(product=Product(productNumber=2), quantity=5)])
2022-05-18 00:53:53,637 INFO com.swa.application.integration.EventService [http-nio-8009-exec-5] Publish: CART-UPDATED with payload: ShoppingCart(shoppingCartNumber=0001, cartLines=[CartLine(product=Product(productNumber=1), quantity=5)])
2022-05-18 00:53:53,659 INFO com.swa.application.integration.EventService [http-nio-8009-exec-6] Publish: CART-UPDATED with payload: ShoppingCart(shoppingCartNumber=0001, cartLines=[CartLine(product=Product(productNumber=1), quantity=5)])
2022-05-18 00:53:55,731 INFO com.swa.application.service.CartService [http-nio-8009-exec-7] ShoppingCart(shoppingCartNumber=0001, cartLines=[CartLine(product=Product(productNumber=1), quantity=5)])checked out!
2022-05-18 00:53:55,737 INFO com.swa.application.integration.EventService [http-nio-8009-exec-7] Publish: CART-DELETED with payload: ShoppingCart(shoppingCartNumber=0001, cartLines=[CartLine(product=Product(productNumber=1), quantity=5)])
2022-05-18 00:57:43,624 INFO com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver [AsyncResolver-bootstrap-executor-0] Resolving eureka endpoints via configuration
2022-05-18 00:58:22,001 INFO com.swa.application.integration.EventService [http-nio-8009-exec-9] Publish: CART-CREATED with payload: ShoppingCart(shoppingCartNumber=0001, cartLines=null)
2022-05-18 00:58:22,043 INFO com.swa.application.integration.EventService [http-nio-8009-exec-10] Publish: CART-UPDATED with payload: ShoppingCart(shoppingCartNumber=0001, cartLines=[CartLine(product=Product(productNumber=1), quantity=5)])
2022-05-18 00:58:22,063 INFO com.swa.application.integration.EventService [http-nio-8009-exec-1] Publish: CART-UPDATED with payload: ShoppingCart(shoppingCartNumber=0001, cartLines=[CartLine(product=Product(productNumber=1), quantity=5), CartLine(product=Product(productNumber=2), quantity=5)])
2022-05-18 00:58:22,086 INFO com.swa.application.integration.EventService [http-nio-8009-exec-2] Publish: CART-UPDATED with payload: ShoppingCart(shoppingCartNumber=0001, cartLines=[CartLine(product=Product(productNumber=1), quantity=5)])
2022-05-18 00:58:22,106 INFO com.swa.application.integration.EventService [http-nio-8009-exec-3] Publish: CART-UPDATED with payload: ShoppingCart(shoppingCartNumber=0001, cartLines=[CartLine(product=Product(productNumber=1), quantity=5)])
2022-05-18 00:58:24,181 INFO com.swa.application.service.CartService [http-nio-8009-exec-4] ShoppingCart(shoppingCartNumber=0001, cartLines=[CartLine(product=Product(productNumber=1), quantity=5)])checked out!
2022-05-18 00:58:24,187 INFO com.swa.application.integration.EventService [http-nio-8009-exec-4] Publish: CART-DELETED with payload: ShoppingCart(shoppingCartNumber=0001, cartLines=[CartLine(product=Product(productNumber=1), quantity=5)])
2022-05-18 01:02:13,167 INFO com.swa.application.integration.EventService [http-nio-8009-exec-6] Publish: CART-CREATED with payload: ShoppingCart(shoppingCartNumber=0001, cartLines=null)
2022-05-18 01:02:13,241 INFO com.swa.application.integration.EventService [http-nio-8009-exec-7] Publish: CART-UPDATED with payload: ShoppingCart(shoppingCartNumber=0001, cartLines=[CartLine(product=Product(productNumber=1), quantity=5)])
2022-05-18 01:02:13,267 INFO com.swa.application.integration.EventService [http-nio-8009-exec-8] Publish: CART-UPDATED with payload: ShoppingCart(shoppingCartNumber=0001, cartLines=[CartLine(product=Product(productNumber=1), quantity=5), CartLine(product=Product(productNumber=2), quantity=5)])
2022-05-18 01:02:13,301 INFO com.swa.application.integration.EventService [http-nio-8009-exec-9] Publish: CART-UPDATED with payload: ShoppingCart(shoppingCartNumber=0001, cartLines=[CartLine(product=Product(productNumber=1), quantity=5)])
2022-05-18 01:02:13,323 INFO com.swa.application.integration.EventService [http-nio-8009-exec-10] Publish: CART-UPDATED with payload: ShoppingCart(shoppingCartNumber=0001, cartLines=[CartLine(product=Product(productNumber=1), quantity=5)])
2022-05-18 01:02:15,418 INFO com.swa.application.service.CartService [http-nio-8009-exec-1] ShoppingCart(shoppingCartNumber=0001, cartLines=[CartLine(product=Product(productNumber=1), quantity=5)])checked out!
2022-05-18 01:02:15,427 INFO com.swa.application.integration.EventService [http-nio-8009-exec-1] Publish: CART-DELETED with payload: ShoppingCart(shoppingCartNumber=0001, cartLines=[CartLine(product=Product(productNumber=1), quantity=5)])
2022-05-18 01:02:43,640 INFO com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver [AsyncResolver-bootstrap-executor-0] Resolving eureka endpoints via configuration
2022-05-18 01:07:43,646 INFO com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver [AsyncResolver-bootstrap-executor-0] Resolving eureka endpoints via configuration
2022-05-18 01:10:42,953 INFO com.swa.application.integration.EventService [http-nio-8009-exec-3] Publish: CART-CREATED with payload: ShoppingCart(shoppingCartNumber=0001, cartLines=null)
2022-05-18 01:10:43,025 INFO com.swa.application.integration.EventService [http-nio-8009-exec-4] Publish: CART-UPDATED with payload: ShoppingCart(shoppingCartNumber=0001, cartLines=[CartLine(product=Product(productNumber=1), quantity=5)])
2022-05-18 01:10:43,047 INFO com.swa.application.integration.EventService [http-nio-8009-exec-5] Publish: CART-UPDATED with payload: ShoppingCart(shoppingCartNumber=0001, cartLines=[CartLine(product=Product(productNumber=1), quantity=5), CartLine(product=Product(productNumber=1), quantity=5)])
2022-05-18 01:10:43,077 INFO com.swa.application.integration.EventService [http-nio-8009-exec-6] Publish: CART-UPDATED with payload: ShoppingCart(shoppingCartNumber=0001, cartLines=[CartLine(product=Product(productNumber=1), quantity=5)])
2022-05-18 01:10:43,095 INFO com.swa.application.integration.EventService [http-nio-8009-exec-7] Publish: CART-UPDATED with payload: ShoppingCart(shoppingCartNumber=0001, cartLines=[CartLine(product=Product(productNumber=1), quantity=5)])
2022-05-18 01:10:45,178 INFO com.swa.application.service.CartService [http-nio-8009-exec-8] ShoppingCart(shoppingCartNumber=0001, cartLines=[CartLine(product=Product(productNumber=1), quantity=5)])checked out!
2022-05-18 01:10:45,184 INFO com.swa.application.integration.EventService [http-nio-8009-exec-8] Publish: CART-DELETED with payload: ShoppingCart(shoppingCartNumber=0001, cartLines=[CartLine(product=Product(productNumber=1), quantity=5)])
2022-05-18 01:12:43,649 INFO com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver [AsyncResolver-bootstrap-executor-0] Resolving eureka endpoints via configuration
2022-05-18 01:13:50,153 INFO com.swa.application.integration.EventService [http-nio-8009-exec-10] Publish: CART-CREATED with payload: ShoppingCart(shoppingCartNumber=0001, cartLines=null)
2022-05-18 01:13:50,196 INFO com.swa.application.integration.EventService [http-nio-8009-exec-1] Publish: CART-UPDATED with payload: ShoppingCart(shoppingCartNumber=0001, cartLines=[CartLine(product=Product(productNumber=1), quantity=5)])
2022-05-18 01:13:50,221 INFO com.swa.application.integration.EventService [http-nio-8009-exec-2] Publish: CART-UPDATED with payload: ShoppingCart(shoppingCartNumber=0001, cartLines=[CartLine(product=Product(productNumber=1), quantity=5), CartLine(product=Product(productNumber=1), quantity=5)])
2022-05-18 01:13:50,252 INFO com.swa.application.integration.EventService [http-nio-8009-exec-3] Publish: CART-UPDATED with payload: ShoppingCart(shoppingCartNumber=0001, cartLines=[CartLine(product=Product(productNumber=1), quantity=5)])
2022-05-18 01:13:50,278 INFO com.swa.application.integration.EventService [http-nio-8009-exec-4] Publish: CART-UPDATED with payload: ShoppingCart(shoppingCartNumber=0001, cartLines=[CartLine(product=Product(productNumber=1), quantity=5)])
2022-05-18 01:13:52,362 INFO com.swa.application.service.CartService [http-nio-8009-exec-5] ShoppingCart(shoppingCartNumber=0001, cartLines=[CartLine(product=Product(productNumber=1), quantity=5)])checked out!
2022-05-18 01:13:52,369 INFO com.swa.application.integration.EventService [http-nio-8009-exec-5] Publish: CART-DELETED with payload: ShoppingCart(shoppingCartNumber=0001, cartLines=[CartLine(product=Product(productNumber=1), quantity=5)])
2022-05-18 01:17:03,925 INFO com.swa.application.integration.EventService [http-nio-8009-exec-7] Publish: CART-CREATED with payload: ShoppingCart(shoppingCartNumber=0001, cartLines=null)
2022-05-18 01:17:03,984 INFO com.swa.application.integration.EventService [http-nio-8009-exec-8] Publish: CART-UPDATED with payload: ShoppingCart(shoppingCartNumber=0001, cartLines=[CartLine(product=Product(productNumber=1), quantity=5)])
2022-05-18 01:17:04,003 INFO com.swa.application.integration.EventService [http-nio-8009-exec-9] Publish: CART-UPDATED with payload: ShoppingCart(shoppingCartNumber=0001, cartLines=[CartLine(product=Product(productNumber=1), quantity=5), CartLine(product=Product(productNumber=1), quantity=5)])
2022-05-18 01:17:04,037 INFO com.swa.application.integration.EventService [http-nio-8009-exec-10] Publish: CART-UPDATED with payload: ShoppingCart(shoppingCartNumber=0001, cartLines=[CartLine(product=Product(productNumber=1), quantity=5)])
2022-05-18 01:17:04,053 INFO com.swa.application.integration.EventService [http-nio-8009-exec-1] Publish: CART-UPDATED with payload: ShoppingCart(shoppingCartNumber=0001, cartLines=[CartLine(product=Product(productNumber=1), quantity=5)])
2022-05-18 01:17:06,134 INFO com.swa.application.service.CartService [http-nio-8009-exec-2] ShoppingCart(shoppingCartNumber=0001, cartLines=[CartLine(product=Product(productNumber=1), quantity=5)])checked out!
2022-05-18 01:17:06,140 INFO com.swa.application.integration.EventService [http-nio-8009-exec-2] Publish: CART-DELETED with payload: ShoppingCart(shoppingCartNumber=0001, cartLines=[CartLine(product=Product(productNumber=1), quantity=5)])
2022-05-18 01:17:43,654 INFO com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver [AsyncResolver-bootstrap-executor-0] Resolving eureka endpoints via configuration
2022-05-18 01:17:57,711 INFO com.swa.application.integration.EventService [http-nio-8009-exec-3] Publish: CART-CREATED with payload: ShoppingCart(shoppingCartNumber=0001, cartLines=null)
2022-05-18 01:17:57,765 INFO com.swa.application.integration.EventService [http-nio-8009-exec-4] Publish: CART-UPDATED with payload: ShoppingCart(shoppingCartNumber=0001, cartLines=[CartLine(product=Product(productNumber=1), quantity=5)])
2022-05-18 01:17:57,790 INFO com.swa.application.integration.EventService [http-nio-8009-exec-5] Publish: CART-UPDATED with payload: ShoppingCart(shoppingCartNumber=0001, cartLines=[CartLine(product=Product(productNumber=1), quantity=5), CartLine(product=Product(productNumber=2), quantity=5)])
2022-05-18 01:17:57,820 INFO com.swa.application.integration.EventService [http-nio-8009-exec-6] Publish: CART-UPDATED with payload: ShoppingCart(shoppingCartNumber=0001, cartLines=[CartLine(product=Product(productNumber=1), quantity=5)])
2022-05-18 01:17:57,842 INFO com.swa.application.integration.EventService [http-nio-8009-exec-7] Publish: CART-UPDATED with payload: ShoppingCart(shoppingCartNumber=0001, cartLines=[CartLine(product=Product(productNumber=1), quantity=5)])
2022-05-18 01:17:59,915 INFO com.swa.application.service.CartService [http-nio-8009-exec-8] ShoppingCart(shoppingCartNumber=0001, cartLines=[CartLine(product=Product(productNumber=1), quantity=5)])checked out!
2022-05-18 01:17:59,921 INFO com.swa.application.integration.EventService [http-nio-8009-exec-8] Publish: CART-DELETED with payload: ShoppingCart(shoppingCartNumber=0001, cartLines=[CartLine(product=Product(productNumber=1), quantity=5)])
2022-05-18 01:19:38,315 INFO com.swa.application.integration.EventService [http-nio-8009-exec-10] Publish: CART-CREATED with payload: ShoppingCart(shoppingCartNumber=0001, cartLines=null)
2022-05-18 01:19:38,368 INFO com.swa.application.integration.EventService [http-nio-8009-exec-1] Publish: CART-UPDATED with payload: ShoppingCart(shoppingCartNumber=0001, cartLines=[CartLine(product=Product(productNumber=1), quantity=5)])
2022-05-18 01:19:38,394 INFO com.swa.application.integration.EventService [http-nio-8009-exec-2] Publish: CART-UPDATED with payload: ShoppingCart(shoppingCartNumber=0001, cartLines=[CartLine(product=Product(productNumber=1), quantity=5), CartLine(product=Product(productNumber=2), quantity=5)])
2022-05-18 01:19:38,430 INFO com.swa.application.integration.EventService [http-nio-8009-exec-3] Publish: CART-UPDATED with payload: ShoppingCart(shoppingCartNumber=0001, cartLines=[CartLine(product=Product(productNumber=1), quantity=5)])
2022-05-18 01:19:38,452 INFO com.swa.application.integration.EventService [http-nio-8009-exec-4] Publish: CART-UPDATED with payload: ShoppingCart(shoppingCartNumber=0001, cartLines=[CartLine(product=Product(productNumber=1), quantity=5)])
2022-05-18 01:19:40,532 INFO com.swa.application.service.CartService [http-nio-8009-exec-5] ShoppingCart(shoppingCartNumber=0001, cartLines=[CartLine(product=Product(productNumber=1), quantity=5)])checked out!
2022-05-18 01:19:40,537 INFO com.swa.application.integration.EventService [http-nio-8009-exec-5] Publish: CART-DELETED with payload: ShoppingCart(shoppingCartNumber=0001, cartLines=[CartLine(product=Product(productNumber=1), quantity=5)])
2022-05-18 01:20:45,196 INFO com.swa.application.integration.EventService [http-nio-8009-exec-7] Publish: CART-CREATED with payload: ShoppingCart(shoppingCartNumber=0001, cartLines=null)
2022-05-18 01:20:45,261 INFO com.swa.application.integration.EventService [http-nio-8009-exec-8] Publish: CART-UPDATED with payload: ShoppingCart(shoppingCartNumber=0001, cartLines=[CartLine(product=Product(productNumber=1), quantity=5)])
2022-05-18 01:20:45,284 INFO com.swa.application.integration.EventService [http-nio-8009-exec-9] Publish: CART-UPDATED with payload: ShoppingCart(shoppingCartNumber=0001, cartLines=[CartLine(product=Product(productNumber=1), quantity=5), CartLine(product=Product(productNumber=2), quantity=5)])
2022-05-18 01:20:45,313 INFO com.swa.application.integration.EventService [http-nio-8009-exec-10] Publish: CART-UPDATED with payload: ShoppingCart(shoppingCartNumber=0001, cartLines=[CartLine(product=Product(productNumber=1), quantity=5)])
2022-05-18 01:20:45,331 INFO com.swa.application.integration.EventService [http-nio-8009-exec-1] Publish: CART-UPDATED with payload: ShoppingCart(shoppingCartNumber=0001, cartLines=[CartLine(product=Product(productNumber=1), quantity=5)])
2022-05-18 01:20:47,409 INFO com.swa.application.service.CartService [http-nio-8009-exec-2] ShoppingCart(shoppingCartNumber=0001, cartLines=[CartLine(product=Product(productNumber=1), quantity=5)])checked out!
2022-05-18 01:20:47,417 INFO com.swa.application.integration.EventService [http-nio-8009-exec-2] Publish: CART-DELETED with payload: ShoppingCart(shoppingCartNumber=0001, cartLines=[CartLine(product=Product(productNumber=1), quantity=5)])
2022-05-18 01:21:04,869 INFO com.swa.application.integration.EventService [http-nio-8009-exec-3] Publish: CART-CREATED with payload: ShoppingCart(shoppingCartNumber=0001, cartLines=null)
2022-05-18 01:21:04,933 INFO com.swa.application.integration.EventService [http-nio-8009-exec-4] Publish: CART-UPDATED with payload: ShoppingCart(shoppingCartNumber=0001, cartLines=[CartLine(product=Product(productNumber=1), quantity=5)])
2022-05-18 01:21:04,959 INFO com.swa.application.integration.EventService [http-nio-8009-exec-5] Publish: CART-UPDATED with payload: ShoppingCart(shoppingCartNumber=0001, cartLines=[CartLine(product=Product(productNumber=1), quantity=5), CartLine(product=Product(productNumber=2), quantity=5)])
2022-05-18 01:21:04,995 INFO com.swa.application.integration.EventService [http-nio-8009-exec-6] Publish: CART-UPDATED with payload: ShoppingCart(shoppingCartNumber=0001, cartLines=[CartLine(product=Product(productNumber=1), quantity=5)])
2022-05-18 01:21:05,013 INFO com.swa.application.integration.EventService [http-nio-8009-exec-7] Publish: CART-UPDATED with payload: ShoppingCart(shoppingCartNumber=0001, cartLines=[CartLine(product=Product(productNumber=1), quantity=5)])
2022-05-18 01:21:07,091 INFO com.swa.application.service.CartService [http-nio-8009-exec-8] ShoppingCart(shoppingCartNumber=0001, cartLines=[CartLine(product=Product(productNumber=1), quantity=5)])checked out!
2022-05-18 01:21:07,097 INFO com.swa.application.integration.EventService [http-nio-8009-exec-8] Publish: CART-DELETED with payload: ShoppingCart(shoppingCartNumber=0001, cartLines=[CartLine(product=Product(productNumber=1), quantity=5)])
2022-05-18 01:21:40,985 INFO com.swa.application.integration.EventService [http-nio-8009-exec-9] Publish: CART-CREATED with payload: ShoppingCart(shoppingCartNumber=0001, cartLines=null)
2022-05-18 01:21:41,043 INFO com.swa.application.integration.EventService [http-nio-8009-exec-10] Publish: CART-UPDATED with payload: ShoppingCart(shoppingCartNumber=0001, cartLines=[CartLine(product=Product(productNumber=1), quantity=5)])
2022-05-18 01:21:41,064 INFO com.swa.application.integration.EventService [http-nio-8009-exec-1] Publish: CART-UPDATED with payload: ShoppingCart(shoppingCartNumber=0001, cartLines=[CartLine(product=Product(productNumber=1), quantity=5), CartLine(product=Product(productNumber=2), quantity=5)])
2022-05-18 01:21:41,101 INFO com.swa.application.integration.EventService [http-nio-8009-exec-2] Publish: CART-UPDATED with payload: ShoppingCart(shoppingCartNumber=0001, cartLines=[CartLine(product=Product(productNumber=1), quantity=5)])
2022-05-18 01:21:41,118 INFO com.swa.application.integration.EventService [http-nio-8009-exec-3] Publish: CART-UPDATED with payload: ShoppingCart(shoppingCartNumber=0001, cartLines=[CartLine(product=Product(productNumber=1), quantity=5)])
2022-05-18 01:21:43,195 INFO com.swa.application.service.CartService [http-nio-8009-exec-4] ShoppingCart(shoppingCartNumber=0001, cartLines=[CartLine(product=Product(productNumber=1), quantity=5)])checked out!
2022-05-18 01:21:43,201 INFO com.swa.application.integration.EventService [http-nio-8009-exec-4] Publish: CART-DELETED with payload: ShoppingCart(shoppingCartNumber=0001, cartLines=[CartLine(product=Product(productNumber=1), quantity=5)])
2022-05-18 01:21:55,937 INFO com.swa.application.integration.EventService [http-nio-8009-exec-5] Publish: CART-CREATED with payload: ShoppingCart(shoppingCartNumber=0001, cartLines=null)
2022-05-18 01:21:55,992 INFO com.swa.application.integration.EventService [http-nio-8009-exec-6] Publish: CART-UPDATED with payload: ShoppingCart(shoppingCartNumber=0001, cartLines=[CartLine(product=Product(productNumber=1), quantity=5)])
2022-05-18 01:21:56,015 INFO com.swa.application.integration.EventService [http-nio-8009-exec-7] Publish: CART-UPDATED with payload: ShoppingCart(shoppingCartNumber=0001, cartLines=[CartLine(product=Product(productNumber=1), quantity=5), CartLine(product=Product(productNumber=2), quantity=5)])
2022-05-18 01:21:56,043 INFO com.swa.application.integration.EventService [http-nio-8009-exec-8] Publish: CART-UPDATED with payload: ShoppingCart(shoppingCartNumber=0001, cartLines=[CartLine(product=Product(productNumber=1), quantity=5)])
2022-05-18 01:21:56,061 INFO com.swa.application.integration.EventService [http-nio-8009-exec-9] Publish: CART-UPDATED with payload: ShoppingCart(shoppingCartNumber=0001, cartLines=[CartLine(product=Product(productNumber=1), quantity=5)])
2022-05-18 01:21:58,138 INFO com.swa.application.service.CartService [http-nio-8009-exec-10] ShoppingCart(shoppingCartNumber=0001, cartLines=[CartLine(product=Product(productNumber=1), quantity=5)])checked out!
2022-05-18 01:21:58,145 INFO com.swa.application.integration.EventService [http-nio-8009-exec-10] Publish: CART-DELETED with payload: ShoppingCart(shoppingCartNumber=0001, cartLines=[CartLine(product=Product(productNumber=1), quantity=5)])
2022-05-18 01:22:41,799 INFO com.swa.application.integration.EventService [http-nio-8009-exec-1] Publish: CART-CREATED with payload: ShoppingCart(shoppingCartNumber=0001, cartLines=null)
2022-05-18 01:22:41,860 INFO com.swa.application.integration.EventService [http-nio-8009-exec-2] Publish: CART-UPDATED with payload: ShoppingCart(shoppingCartNumber=0001, cartLines=[CartLine(product=Product(productNumber=1), quantity=5)])
2022-05-18 01:22:41,884 INFO com.swa.application.integration.EventService [http-nio-8009-exec-3] Publish: CART-UPDATED with payload: ShoppingCart(shoppingCartNumber=0001, cartLines=[CartLine(product=Product(productNumber=1), quantity=5), CartLine(product=Product(productNumber=2), quantity=5)])
2022-05-18 01:22:41,913 INFO com.swa.application.integration.EventService [http-nio-8009-exec-4] Publish: CART-UPDATED with payload: ShoppingCart(shoppingCartNumber=0001, cartLines=[CartLine(product=Product(productNumber=1), quantity=5)])
2022-05-18 01:22:41,933 INFO com.swa.application.integration.EventService [http-nio-8009-exec-5] Publish: CART-UPDATED with payload: ShoppingCart(shoppingCartNumber=0001, cartLines=[CartLine(product=Product(productNumber=1), quantity=5)])
2022-05-18 01:22:43,667 INFO com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver [AsyncResolver-bootstrap-executor-0] Resolving eureka endpoints via configuration
2022-05-18 01:22:44,022 INFO com.swa.application.service.CartService [http-nio-8009-exec-6] ShoppingCart(shoppingCartNumber=0001, cartLines=[CartLine(product=Product(productNumber=1), quantity=5)])checked out!
2022-05-18 01:22:44,029 INFO com.swa.application.integration.EventService [http-nio-8009-exec-6] Publish: CART-DELETED with payload: ShoppingCart(shoppingCartNumber=0001, cartLines=[CartLine(product=Product(productNumber=1), quantity=5)])
